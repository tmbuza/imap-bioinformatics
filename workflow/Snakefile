from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# Function for aggregating list of raw sequencing files.
mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

sraSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{sraNum, [12]}.fastq.gz')).sample))


rule all:
    input:
    # get_references.smk
        expand("{refsdir}/{silva}.seed.align", refsdir=config["refsdir"], silva="silva"),
        expand("{refsdir}/{silva}.v4.align", refsdir=config["refsdir"], silva="silva"),
        expand("{refsdir}/{silva}.seed.ng.fasta", refsdir=config["refsdir"], silva="silva"),
        expand("{refsdir}/{silva}.v4.ng.fasta", refsdir=config["refsdir"], silva="silva"),
        expand("{refsdir}/{rpd}.pds.fasta", refsdir=config["refsdir"], rpd="trainset16_022016"),
        expand("{refsdir}/{rpd}.pds.tax", refsdir=config["refsdir"], rpd="trainset16_022016"),
        expand("{refsdir}/{zymo}.mock.16S.v4.fasta", refsdir=config["refsdir"], zymo="zymo"),

        # make_files.smk
        expand("{outdir}/{dataset}.files", outdir=config["outdir"], dataset=config["dataset"]),

        # make_contigs.smk
        expand("{outdir}/{dataset}.trim.contigs.good.unique.fasta", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.count_table", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.summary", outdir=config["outdir"], dataset=config["dataset"]),

        # align_n_filter.smk
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.fasta", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.count_table", outdir=config["outdir"], dataset=config["dataset"]),

        # denoise_n_classify80.smk
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.count_table", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.fasta", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pds.wang.pick.taxonomy", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pds.wang.accnos", outdir=config["outdir"], dataset=config["dataset"]),

        # cluster_identity97
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.list", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.steps", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.sensspec", outdir=config["outdir"], dataset=config["dataset"]),

        # get_otutable
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.shared", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.0.03.cons.taxonomy", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.0.03.cons.tax.summary", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.0.03.rep.count_table", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.0.03.lefse", outdir=config["outdir"], dataset=config["dataset"]),
        expand("{outdir}/{dataset}.trim.contigs.good.unique.good.filter.unique.precluster.denovo.vsearch.pick.opti_mcc.0.03.biom", outdir=config["outdir"], dataset=config["dataset"]),

        # reformat_files
        "data/mothur/process/final.list",
        "data/mothur/process/final.shared",
        "data/mothur/process/final.steps",
        "data/mothur/process/final.sensspec",
        "data/mothur/process/final.cons.taxonomy",
        "data/mothur/process/final.cons.tax.summary",
        "data/mothur/process/final.rep.fasta",
        "data/mothur/process/final.rep.count_table",
        "data/mothur/process/final.lefse",
        "data/mothur/process/final.biom",
        
        # split_otutable
        expand("{outdir}/{group}.final.shared", outdir=config["outdir"], group = config["mothurGroups"]),
    

include: "rules/get_references.smk"
include: "rules/make_files.smk"
include: "rules/make_contigs.smk"
include: "rules/align_n_filter.smk"
include: "rules/denoise_n_classify80.smk"
include: "rules/cluster_identity97.smk"
include: "rules/get_otutable.smk"
include: "rules/reformat_files.smk"
include: "rules/split_otutable.smk"


