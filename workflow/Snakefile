from snakemake.utils import min_version

min_version("6.10.0")

# Configuration file containing all user-specified settings
configfile: "config/config.yaml"

# Function for aggregating list of raw sequencing files.
mothurSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{readNum, R[12]}_001.fastq.gz')).sample))

sraSamples = list(set(glob_wildcards(os.path.join('data/mothur/raw/', '{sample}_{sraNum, [12]}.fastq.gz')).sample))

# final_bioinfo_files.smk
# FINAL FILES        
# OTU ANALYSIS FILES

rule all:
    input:
        "results/qc/seqkit1_stats.txt",
        "results/qc/fastqc1/F3D0_S188_L001_R1_001_fastqc.html",
        "results/qc/multiqc1/multiqc.html",


        # "data/mothur/references/zymo.mock.16S.v4.fasta",
        expand("{finalotus}/final.list", finalotus=config["finalotus"]),
        expand("{finalotus}/final.shared", finalotus=config["finalotus"]),
        expand("{finalotus}/final.steps", finalotus=config["finalotus"]),
        expand("{finalotus}/final.sensspec", finalotus=config["finalotus"]),
        expand("{finalotus}/final.cons.taxonomy", finalotus=config["finalotus"]),
        expand("{finalotus}/final.cons.tax.summary", finalotus=config["finalotus"]),
        expand("{finalotus}/final.rep.fasta", finalotus=config["finalotus"]),
        expand("{finalotus}/final.rep.count_table", finalotus=config["finalotus"]),
        expand("{finalotus}/final.lefse", finalotus=config["finalotus"]),
        expand("{finalotus}/final.biom", finalotus=config["finalotus"]),

# PHYLOTYPE ANALYSIS FILES
        expand("{finalphylotype}/final.tx.list", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.rabund", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.sabund", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.shared", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.cons.taxonomy", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.cons.tax.summary", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.lefse", finalphylotype=config["finalphylotype"]),
        expand("{finalphylotype}/final.tx.biom", finalphylotype=config["finalphylotype"]),


# ASV ANALYSIS FILES
        expand("{finalasv}/final.asv.list", finalasv=config["finalasv"]),
        expand("{finalasv}/final.asv.shared", finalasv=config["finalasv"]),
        expand("{finalasv}/final.asv.cons.taxonomy", finalasv=config["finalasv"]),
        expand("{finalasv}/final.asv.cons.tax.summary", finalasv=config["finalasv"]),
        expand("{finalasv}/final.asv.lefse", finalasv=config["finalasv"]),
        expand("{finalasv}/final.asv.biom", finalasv=config["finalasv"]),


# # # PHYLOGENY ANALYSIS FILES
        expand("{finalphylogeny}/final.phylip.dist", finalphylogeny=config["finalphylogeny"]),
        expand("{finalphylogeny}/final.phylip.tre", finalphylogeny=config["finalphylogeny"]),

# SPLITTING
        # split_otutable
        expand("{finalotus}/{group}.final.shared", finalotus=config["finalotus"], group=config["mothurGroups"]),

        # # subsample_otutable
        expand("{finalotus}/{group}.final.0.03.subsample.shared", finalotus=config["finalotus"], group=config["mothurGroups"]),


        # # rules_dag.smk
        # "dags/rulegraph.svg",
        # "dags/rulegraph.png",
        # "dags/dag.svg",
        # "dags/dag.png",
        # "report/report.html",
        # "index.html",

include: "rules/qc.smk"

include: "rules/get_references.smk"
include: "rules/make_files.smk"
include: "rules/make_contigs.smk"
include: "rules/align_n_filter.smk"
include: "rules/denoise_n_classify80.smk"
include: "rules/classify_otu97.smk"
include: "rules/classify_phylotype.smk"
include: "rules/classify_asv.smk"
include: "rules/classify_phylogeny.smk"
include: "rules/final_bioinfo_files.smk"
include: "rules/otutable_by_group.smk"
include: "rules/count_groups.smk"
include: "rules/subsample_otutable.smk"

# include: "rules/rules_dag.smk"
# include: "rules/interactive_report.smk"
# include: "rules/render_index.smk"



